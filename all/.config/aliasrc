#!/bin/bash

# Use neovim for vim if present.
command -v nvim > /dev/null && alias vim="nvim" vimdiff="nvim -d"

# Verbosity and settings that you pretty much just always are going to want.
alias \
  cp="cp -iv" \
  mv="mv -iv" \
  rm="trash-put" \
  mkd="mkdir -pv" \
  ffmpeg="ffmpeg -hide_banner"
# rm="rm -Iv" \

# Colorize commands when possible.
alias \
  ls="ls -hN --color=auto --group-directories-first" \
  grep="grep --color=auto" \
  diff="diff --color=auto" \
  ccat="highlight --out-format=ansi"

# These common commands are just too long! Abbreviate them.
alias \
  ka="killall" \
  g="git" \
  trem="transmission-remote" \
  YT="youtube-viewer" \
  sdn="sudo shutdown -h now" \
  f='$FILE' \
  e='$EDITOR' \
  v='$EDITOR' \
  p="sudo pacman"

# This alias is important. It enables the `pauseallmpv` command.
alias mpv='mpv --input-ipc-server=/tmp/mpvsoc$(date +%s)'

# Some other stuff
alias \
  magit="nvim -c MagitOnly" \
  ref="shortcuts >/dev/null; source ~/.config/shortcutrc" \
  weath="less -S ~/.local/share/weatherreport"

alias b='bat' \
  c='clear' \
  calcurse="calcurse -D ~/.config/calcurse" \
  ccat="highlight --out-format=ansi" \
  d='docker' \
  glg="git log --graph --date-order --date=format-local:'%F %R' --full-history --color --decorate --pretty=format:'%x08%x09%C(red)%h %C(cyan)%ad %C(bold blue)%aN%C(reset)%C(bold yellow)%d %C(reset)%s'" \
  glga="git log --graph --date-order --date=format-local:'%F %R' --full-history --all --color --decorate --pretty=format:'%x08%x09%C(red)%h %C(cyan)%ad %C(bold blue)%aN%C(reset)%C(bold yellow)%d %C(reset)%s'" \
  gua="git remote | xargs -L1 git push --all" \
  gss="git status -sb" \
  icat="kitty +kitten icat" \
  ll='ls -lAFh --group-directories-first' \
  llt='ls -lAFht --group-directories-first' \
  vw="nvim -u ~/.config/nvim/wiki-init.vim -c VimwikiIndex" \
  y="yarn" \
  yl="yarn lint" \
  ylb="yarn lint:backend" \
  ytw="yarn test --watch" \
  ysb="yarn serve:babel" \
  ytb="yarn test:backend" \
  ystb="yarn start:backend"
# config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME' \

if [ -n "$ZSH_VERSION" ]; then
  alias -g J='| python -m json.tool'
  alias -g X='| xsel -bi'
  alias -g B='| /usr/bin/bat --style="plain"'
  alias -g L='| /usr/bin/less'
  alias -g F='| fx'
  alias -g N='&& dunstify "done"'
elif [ -n "$BASH_VERSION" ]; then
  _xfunc git __git_complete g _git
  complete -F _yarn y
fi

vf() { fzf | xargs -r -I % "$EDITOR" %; }

# terminal-scheme dark|light
function terminal-scheme() {
  nvim_config_file=~/.config/nvim/init.vim
  sed --follow-symlinks -i "s/\(^set background=\).*/\1$1/g" $nvim_config_file

  wiki_config_file=~/.config/nvim/wiki-init.vim
  sed --follow-symlinks -i "s/\(^set background=\).*/\1$1/g" $wiki_config_file

  # bat_config_file=~/.config/bat/config
  # if [[ $1 == 'light' ]]; then
  #   echo '--theme="ansi-dark"' > $bat_config_file
  #   echo '--plain' >> $bat_config_file
  # else
  #   echo '--theme="ansi-light"' > $bat_config_file
  #   echo '--plain' >> $bat_config_file
  # fi

  kitty_config_file=~/.config/kitty/kitty.conf
  sed --follow-symlinks -i "s#^\(include\s\./kitty-themes/gruvbox_*\).*#\1$1.conf#g" $kitty_config_file
  # kitty @ set-colors --all --configured "$HOME/.config/kitty/kitty-themes/gruvbox_$1.conf"

  for socket in $(find /tmp/ -maxdepth 1 -name "kitty-$USER-*"); do
    if which kitty > /dev/null; then
      # kitty @  >/dev/null
      kitty @ --to unix:"$socket" set-colors --all --configured "$HOME/.config/kitty/kitty-themes/gruvbox_$1.conf"
    fi
  done

  rofi_config_file=~/.config/rofi/config
  sed --follow-symlinks -i "s#^\(rofi.theme: /usr/share/rofi/themes/gruvbox-*\).*#\1$1-soft.rasi#g" $rofi_config_file

  if [[ "$WORK" == 'true' || $3 == 'forcebrowser' ]]; then
    qute_config_file=~/.config/qutebrowser/config.py
    if [[ $1 == 'light' ]]; then
      # sed --follow-symlinks -i "s#^\(c\.content\.user_stylesheets = \).*#\1[css_base]#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.colors\.webpage\.bg = \).*#\1'white'#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.qt\.args = \).*#\1[]#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.colors\.webpage\.darkmode\.enabled = \).*#\1False#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.colors\.webpage\.prefers_color_scheme_dark = \).*#\1False#" $qute_config_file
    else
      # sed --follow-symlinks -i "s#^\(c\.content\.user_stylesheets = \).*#\1[css_base, css_dark]#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.colors\.webpage\.bg = \).*#\1'black'#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.qt\.args = \).*#\1['force-dark-mode']#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.colors\.webpage\.darkmode\.enabled = \).*#\1True#" $qute_config_file
      sed --follow-symlinks -i "s#^\(c\.colors\.webpage\.prefers_color_scheme_dark = \).*#\1True#" $qute_config_file
    fi
    if xwininfo -tree -root | grep ' ("qutebrowser" ' > /dev/null 1>&1; then
      if [[ $2 == 'restart' ]]; then
        qutebrowser ':restart' > /dev/null 1>&1
      fi
      # if [[ $1 == 'light' ]]; then
      #   qutebrowser ':set --temp content.user_stylesheets ["~/.config/qutebrowser/base.css"] ;; set --temp colors.webpage.bg "white"' > /dev/null 1>&1
      # else
      #   qutebrowser ':set --temp content.user_stylesheets ["~/.config/qutebrowser/dark.css"] ;; set --temp colors.webpage.bg "black"' > /dev/null 2>&1
      # fi
    fi
  fi

  zathura_config_file=~/.config/zathura/zathurarc
  if [[ $1 == 'light' ]]; then
    sed --follow-symlinks -i "s/\(^set recolor \).*/\1false/g" $zathura_config_file
  else
    sed --follow-symlinks -i "s/\(^set recolor \).*/\1true/g" $zathura_config_file
  fi

  vifm_config_file=~/.config/vifm/vifmrc
  sed --follow-symlinks -i "s#^\(colorscheme\s\).*#\1$1#g" $vifm_config_file

  xresources_config_file=~/.Xresources
  sed --follow-symlinks -i "s#^\(\#include \".config/xterm/*\).*#\1$1\"#g" $xresources_config_file
  xrdb -merge ~/.Xresources

  for i in $(nvr --serverlist); do
    if [[ $1 == 'light' ]]; then
      nvr --servername "$i" --remote-send '<c-\><c-n>;set background=light<cr>'
    else
      nvr --servername "$i" --remote-send '<c-\><c-n>;set background=dark<cr>'
    fi
  done
}

# Change background color of current (and child) kitty instance.
function kbg() {
  kitty @ set-colors --all --configured "$HOME/.config/kitty/kitty-themes/gruvbox_$1.conf"
}

alias -g GHFZF='| gh'
alias -g lastbranch='$(cat .git/lastbranch)'
# compdef config=git

alias vtty='IS_TTY=yes $EDITOR'
