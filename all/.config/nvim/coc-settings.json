{
  "npm.binPath": "yarn",
  "coc.preferences.extensionUpdateCheck": "never",
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "html",
    "javascript",
    "json",
    "markdown",
    "scss",
    "typescript",
    "vimwiki",
    "yaml",
    "sh"
  ],
  "coc.preferences.enableFloatHighlight": false,
  "coc.preferences.colorSupport": false,
  "coc.source.file.ignoreHidden": false,
  "coc.source.file.triggerCharacters": [
    "/",
    ".",
    ".."
  ],
  "markdownlint.config": {
    "default": true,
    "line_length": false
  },
  "typescript.format.enabled": false,
  "javascript.format.enabled": false,
  "json.format.enable": false,
  "prettier.onlyUseLocalVersion": true,
  "snippets.extends": {
    "vimwiki": [
      "markdown",
      "vimwiki"
    ]
  },
  "snippets.userSnippetsDirectory": "~/.config/nvim/snips/UltiSnips",
  "smartf.wordJump": false,
  "smartf.jumpOnTrigger": false,
  "diagnostic.refreshOnInsertMode": true,
  "javascript.validate.enable": false,
  "yank.priority": 70,
  "yank.highlight.enable": false,
  "explorer.position": "floating",
  // "tsserver.trace.server": "verbose",
  "jest.customFlags": [
    "runInBand",
    "verbose",
    "expand",
    "no-cache"
  ],
  "coc-conventional.enableLernaScopes": true,
  "post.root": "~/.config/coc/coc-post",
  "todolist.promptForReminder": false,
  "eslint.enable": false,
  "emmet.includeLanguages": {
    "javascriptreact": "javascriptreact"
  },
  "diagnostic-languageserver.filetypes": {
    // lint `sh` (includes `bash`) files
    "sh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    // format `sh` (includes `bash`) files using formatter defined below
    "sh": "shfmt"
  },
  "diagnostic-languageserver.formatters": {
    // define our formatter so that we can reference it from
    // `diagnostic-languageserver.formatFiletypes`
    "shfmt": {
      "command": "shfmt",
      // all the below args are entirely optional
      // primarily listed here to call out that flags which take an
      // argument (such as `-i <num-spaces>` for specifying indentation)
      // should be split into two strings, the flag and then the value
      "args": ["-i", "2", "-bn", "-ci", "-sr"]
    }
  }
}
