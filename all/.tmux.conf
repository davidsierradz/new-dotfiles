# options

set-option -g prefix C-a
set-option -g prefix2 '€'

set-option -w -g mode-keys vi

set-option -w -g mode-style "bg=red,fill=red,fg=black,bold"
# for tmux 2.6
# set-option -w -g mode-style "bg=red"
# set-option -w -ga mode-style "fg=black bold"

set-option -g default-terminal "tmux-256color"
if "[[ ${TERM} == linux ]]" 'set-option -g default-terminal tmux-256color'

# enable 24-bit true color RGB escape sequences under terms
set-option -ga terminal-overrides ",tmux-256color:Tc,xterm-256color:Tc,xterm-kitty:Tc,screen-256color:Tc"
set-option -ga terminal-overrides ",xterm-kitty:RGB"
# yank to system clipboard rather than primary selection http://invisible-island.net/xterm/terminfo-contents.html#tic-xterm_tmux
set-option -ga terminal-overrides ',xterm*:Ms=\E]52;c;%p2%s\007'
# KiTTY always appends to clipboard; must clear it first https://sw.kovidgoyal.net/kitty/protocol-extensions.html#pasting-to-clipboard
set-option -ga terminal-overrides ',xterm-kitty:Ms=\E]52;c;!\007\E]52;c;%p2%s\007'
set-option -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
# set-option -sa terminal-overrides ',linux:RGB'
# set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'
# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
set-option -ga terminal-overrides ',xterm*:XT'
set-option -ga terminal-overrides ',linux:RGB'

set-option -g pane-active-border-style fg=green

set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-left-length 30
set-option -g status-right ' #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]#(TZ="America/Bogota" date "+%%m-%%d %%H:%%M")#(acpi | cut -d ',' -f 2)#[default]#{?client_prefix,#[fg=red] ^A,}'

set-option -w -g monitor-activity on
set-option -g visual-activity on
# auto-set terminal title to current window pane's title
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

# prevent tmux from catching modifier keys meant for Vim
set-option -s escape-time 0
# enable mouse support for general selection and control
set-option -g mouse on
set-option -g history-limit 30000
# allow Vim to recieve modifier keys: Shift, Control, Alt
set-option -w -g xterm-keys on
# allow Vim to receive focus events from terminal window
set-option -g focus-events on

set-option -w -g automatic-rename on
set-option -w -g window-status-current-style "fg=#ffffff,bg=#9d0006"
set-option -w -g aggressive-resize on

set-option -g base-index 1
# start pane number from 1 similar to windows
set-option -g pane-base-index 1

# From https://github.com/kovidgoyal/kitty/issues/782#issuecomment-475242929
set-option -g set-clipboard on

set-option -g renumber-windows on

# bindings

unbind-key j
unbind-key C-b # unbind default leader key
unbind-key '"' # unbind horizontal split
unbind-key %   # unbind vertical split

bind-key Enter break-pane

# bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

bind-key Tab last-window

bind-key '€' send-prefix -2
# bind-key "€" choose-tree -Zw

# bind-key M-- select-layout "even-vertical"

# bind-key M-| select-layout "even-horizontal"

bind-key C-a send-prefix
# bind-key A command-prompt "rename-window %%"

bind-key c split-window -v -c '#{pane_current_path}' # split pane horizontally

bind-key h select-pane -L
bind-key -r C-h resize-pane -L

bind-key j select-pane -D
bind-key -r C-j resize-pane -D

bind-key k select-pane -U
bind-key -r C-k resize-pane -U

bind-key l select-pane -R
bind-key -r C-l resize-pane -R

bind-key N new-window -c '#{pane_current_path}'

# bind-key o select-layout "active-only"

# bind-key r source-file ~/.tmux.conf
# bind-key M-r rotate-window

bind-key v split-window -h -c '#{pane_current_path}' # split pane vertically
bind-key -T copy-mode-vi 'v' send -X begin-selection

bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# transfer copied text to attached terminal with yank:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -T copy-mode-vi 'Y' send-keys -X copy-pipe 'yank > #{pane_tty}'
# transfer most-recently copied text to attached terminal with yank:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'
# transfer previously copied text (chosen from a menu) to attached terminal:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'

# search buffer using copy mode
bind-key -n M-/ copy-mode \;\
  command-prompt -p 'search-backward (press up):' \
    -i 'send-keys -X search-backward-incremental "%%%"'

# search buffer using Vim or less
bind-key -n M-|                               \
  capture-pane -J -S - \;                     \
  new-window -n '#S:#I.#P' -a '               \
    tmux save-buffer - \; delete-buffer | {   \
      if command -v vim;                      \
      then vim -R -c "set nofen is hls ic" -; \
      else less;                              \
      fi;                                     \
    };                                        \
  ' \;                                        \
  run-shell 'tmux send-keys G \?'

# search colored buffer using less
bind-key -n M-?                           \
  capture-pane -e -J -S - \;              \
  new-window -n '#S:#I.#P' -a '           \
    tmux save-buffer - \; delete-buffer | \
    less -R                               \
  ' \;                                    \
  run-shell 'tmux send-keys G \?'

# From https://github.com/christoomey/vim-tmux-navigator/blob/master/vim-tmux-navigator.tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-M-k if-shell "$is_vim" "send-keys C-M-k" "copy-mode -u"
bind-key -T copy-mode-vi C-M-k if-shell "$is_vim" "send-keys C-M-k" "send-keys -X page-up"
bind-key -T copy-mode-vi C-M-j if-shell "$is_vim" "send-keys C-M-j" "send-keys -X page-down"

bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "copy-mode"
bind-key -T copy-mode-vi M-k   send-keys -X cursor-up
bind-key -T copy-mode-vi M-j   send-keys -X cursor-down



#Variables
color_status_text="colour245"
color_window_off_status_bg="colour238"
color_light="white" #colour015
color_dark="colour232" # black= colour232
color_window_off_status_current_bg="colour254"

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
# wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

# set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"
